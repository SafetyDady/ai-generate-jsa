// ‚úÖ pages/jsa/generate-upload.js
// Phase 1: Upload Workstep + Extract AI Draft

import { useState } from 'react';
import { useRouter } from 'next/router';

export default function GenerateUpload() {
  const router = useRouter();
  const [file, setFile] = useState(null);
  const [siteName, setSiteName] = useState('');
  const [area, setArea] = useState('');
  const [jobTitle, setJobTitle] = useState('');
  const [uploading, setUploading] = useState(false);

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
  };

  const handleExtract = async () => {
    if (!file || !siteName || !area || !jobTitle) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå');
      return;
    }

    setUploading(true);

    // ‚õ≥Ô∏è Mock AI Extraction Result
    const mockExtractedSteps = [
      '‡∏õ‡∏µ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á',
      '‡∏¢‡∏∂‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡πÇ‡∏Ñ‡∏°‡πÑ‡∏ü‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ú‡∏ô‡∏±‡∏á',
      '‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏õ‡∏•‡∏±‡πä‡∏Å',
      '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü'
    ];

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏õ Phase 2 ‡∏ú‡πà‡∏≤‡∏ô query ‡∏´‡∏£‡∏∑‡∏≠ storage
    localStorage.setItem('draftSteps', JSON.stringify(mockExtractedSteps));
    router.push('/jsa/generate-builder');
  };

  return (
    <div className="max-w-2xl mx-auto py-10 space-y-6">
      <h1 className="text-2xl font-bold text-center">üì§ Upload Workstep File for Draft JSA</h1>

      <div className="space-y-3">
        <input
          type="file"
          accept=".docx,.txt,.xlsx"
          onChange={handleFileChange}
          className="border rounded p-2 w-full"
        />
        <input
          className="border p-2 rounded w-full"
          placeholder="Site Name"
          value={siteName}
          onChange={(e) => setSiteName(e.target.value)}
        />
        <input
          className="border p-2 rounded w-full"
          placeholder="Area Name"
          value={area}
          onChange={(e) => setArea(e.target.value)}
        />
        <input
          className="border p-2 rounded w-full"
          placeholder="Job Title"
          value={jobTitle}
          onChange={(e) => setJobTitle(e.target.value)}
        />

        <button
          className="w-full bg-blue-600 text-white font-bold py-2 rounded"
          onClick={handleExtract}
          disabled={uploading}
        >
          {uploading ? '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...' : 'üìé Extract Work Steps'}
        </button>
      </div>
    </div>
  );
}
